---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-api
spec:
  selector:
    matchLabels:
      run: client-api
  replicas: 1
  template:
    metadata:
      labels:
        run: client-api
    spec:
      containers:
      - name: client-api
        image: okteto.dev/client-api
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: client-api
  labels:
    run: client-api
  annotations:
    dev.okteto.com/auto-ingress: "true"
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    run: client-api


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loot-data-alternate
spec:
  selector:
    matchLabels:
      run: loot-data-alternate
  replicas: 1
  template:
    metadata:
      labels:
        run: loot-data-alternate
    spec:
      containers:
      - name: loot-data
        image: okteto.dev/loot-data
        ports:
        - containerPort: 8081
        env:
        - name: DEMO_ENABLE_FULL_DATA
          value: "true"

---
apiVersion: v1
kind: Service
metadata:
  name: loot-data-alternate
  labels:
    run: loot-data-alternate
spec:
  clusterIP: "None"
  ports:
  - port: 8081
    targetPort: 8000
    protocol: TCP
  selector:
    run: loot-data-alternate

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loot-data
spec:
  selector:
    matchLabels:
      run: loot-data
  replicas: 1
  template:
    metadata:
      labels:
        run: loot-data
    spec:
      containers:
      - name: loot-data
        image: okteto.dev/loot-data
        ports:
        - containerPort: 8081
      - name: envoy-proxy
        image: envoyproxy/envoy:v1.17.0
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: envoy-sidecar-config
          mountPath: /etc/envoy
      volumes:
        - name: envoy-sidecar-config
          configMap:
            name: envoy-sidecar-config

---
apiVersion: v1
kind: Service
metadata:
  name: loot-data
  labels:
    run: loot-data
spec:
  ports:
  - port: 8081
    targetPort: 8000
    protocol: TCP
  selector:
    run: loot-data

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-sidecar-config
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 8000
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: service
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: local_service
              http_filters:
              - name: envoy.filters.http.router
                typed_config: {}
      clusters:
      - name: local_service
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        load_assignment:
          cluster_name: local_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: loot-data-alternate.jacob
                    port_value: 8081
    admin:
      access_log_path: "/dev/null"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8082
